--Plan--

--Pipes--
-All of the pipes will need to be inputted themselves, so one class for each type.
-The pipes will need to be able to determine if they can supply the requirements, so a function where you pass in the RequirementsInfo. This will just return a boolean.

--Order--
The order class will be used to calculate each order.
The session class will be used to keep track of the orders.

Each order will contain an instance of RequirementsInfo to outline the pipe. 
They ask for the input, and then check that type of pipe can be created. 

--Session--
This class is in-charge of keeping track of the orders and their total.
It will be used to calculate the final total of the ordering session.

--Requirements Info--
This class will contain the information about the pipe specification.
It'll have getters and setters that can be quickly and cleanly queried to collect pipe information.
This will mean that the pipe information won't have to be passed around as parameters. 

--Terminal Input--
This class will be used to get the pipe information from the terminal.
You can use it to get a RquirementsInfo instance.


--Process--
Main method
-The user interface is started up
-An ordering session is begun (Beginning an ordering session will create an instance of order).
-The user can change the details of the order based on the user interface.
-From the user interface the user can add more orders to the session.
-When the user is done the session will end and another can be created.
